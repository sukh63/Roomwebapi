{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Fabric.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fabric() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current, {\n      width: 800,\n      // Set your canvas width\n      height: 400,\n      // Set your canvas height\n      hoverCursor: 'default' // Set a custom cursor style for the canvas background\n    });\n\n    if (imageUrl) {\n      fabric.Image.fromURL(imageUrl, img => {\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n      });\n    }\n\n    // ...rest of your drawing code\n  }, [imageUrl]);\n\n  // Function to handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to handle polygon drawing\n  const handlePolygonDrawing = e => {\n    if (!drawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setPolygonPoints([...polygonPoints, {\n      x,\n      y\n    }]);\n\n    // Draw the polygon on the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawImage(image);\n    drawPolygon(ctx, polygonPoints);\n  };\n\n  // Function to start drawing a polygon\n  const startDrawing = () => {\n    setDrawing(true);\n    setPolygonPoints([]);\n  };\n\n  // Function to stop drawing a polygon\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n\n  // Function to draw an image on the canvas\n  const drawImage = imageUrl => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = imageUrl;\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  };\n\n  // Function to draw a polygon on the canvas\n  const drawPolygon = (ctx, points) => {\n    if (points.length < 2) return;\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  // Clear canvas and reset drawing when the image changes\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      setDrawing(false);\n      setPolygonPoints([]);\n    }\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"sectionmain\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Image Upload and Polygon Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"file-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"file-input-label\",\n            children: \"Choose a File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"image-container\",\n        children: [image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Uploaded Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Uploaded\",\n            width: 400,\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Draw a Polygon:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: 400,\n            height: 400,\n            onMouseDown: startDrawing,\n            onMouseMove: handlePolygonDrawing,\n            onMouseUp: stopDrawing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Fabric, \"l0OzSm5qXgLvQrnr8ejihmxyHCA=\");\n_c = Fabric;\nexport default Fabric;\nvar _c;\n$RefreshReg$(_c, \"Fabric\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fabric","_s","image","setImage","drawing","setDrawing","polygonPoints","setPolygonPoints","canvasRef","canvas","fabric","Canvas","current","width","height","hoverCursor","imageUrl","Image","fromURL","img","setBackgroundImage","renderAll","bind","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","handlePolygonDrawing","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","clearRect","drawImage","drawPolygon","startDrawing","stopDrawing","src","points","length","strokeStyle","lineWidth","lineJoin","beginPath","moveTo","i","lineTo","closePath","stroke","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","type","accept","onChange","alt","ref","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Fabric.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction Fabric() {\n  const [image, setImage] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current, {\n      width: 800, // Set your canvas width\n      height: 400, // Set your canvas height\n      hoverCursor: 'default', // Set a custom cursor style for the canvas background\n    });\n\n    if (imageUrl) {\n      fabric.Image.fromURL(imageUrl, (img) => {\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n      });\n    }\n\n    // ...rest of your drawing code\n  }, [imageUrl]);\n\n  // Function to handle image upload\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to handle polygon drawing\n  const handlePolygonDrawing = (e) => {\n    if (!drawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    setPolygonPoints([...polygonPoints, { x, y }]);\n\n    // Draw the polygon on the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawImage(image);\n    drawPolygon(ctx, polygonPoints);\n  };\n\n  // Function to start drawing a polygon\n  const startDrawing = () => {\n    setDrawing(true);\n    setPolygonPoints([]);\n  };\n\n  // Function to stop drawing a polygon\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n\n  // Function to draw an image on the canvas\n  const drawImage = (imageUrl) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = imageUrl;\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  };\n\n  // Function to draw a polygon on the canvas\n  const drawPolygon = (ctx, points) => {\n    if (points.length < 2) return;\n\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  // Clear canvas and reset drawing when the image changes\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      setDrawing(false);\n      setPolygonPoints([]);\n    }\n  }, [image]);\n\n  return (\n    <div>\n    <section className='sectionmain'>\n      <h1>Image Upload and Polygon Drawing</h1>\n\n      {/* Input field for image upload */}\n      <div>\n      <label class=\"file-input-container\">\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n      <span class=\"file-input-label\">Choose a File</span>\n      </label>\n      </div>\n      <div class=\"image-container\">\n      {/* Display the uploaded image */}\n      {image && (\n        <div>\n          <h2>Uploaded Image:</h2>\n          <img src={image} alt=\"Uploaded\"  width={400}\n          height={400} />\n        </div>\n      )}\n\n      {/* Canvas for drawing polygons */}\n     \n    \n      {image && (\n        <div>\n          <h2>Draw a Polygon:</h2>\n          <canvas\n          ref={canvasRef}\n            width={400}\n            height={400}\n            onMouseDown={startDrawing}\n            onMouseMove={handlePolygonDrawing}\n            onMouseUp={stopDrawing}\n          />\n        </div>\n      )}\n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Fabric;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}