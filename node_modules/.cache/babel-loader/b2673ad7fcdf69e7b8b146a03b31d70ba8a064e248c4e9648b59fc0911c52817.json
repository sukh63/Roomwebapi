{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Fabric.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Fabric = ({\n  imageUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  // Inside your DrawingCanvas component\n  const drawingTool = new fabric.Polygon([], {\n    fill: 'transparent',\n    stroke: 'blue',\n    // Set the polygon's outline color\n    strokeWidth: 2,\n    // Set the outline width\n    selectable: false // Prevent selection of polygons\n  });\n\n  let isDrawing = false;\n  let points = [];\n  canvas.on('mouse:down', e => {\n    isDrawing = true;\n    const pointer = canvas.getPointer(e.e);\n    points = [pointer.x, pointer.y];\n    drawingTool.set({\n      points\n    });\n    canvas.add(drawingTool);\n  });\n  canvas.on('mouse:move', e => {\n    if (!isDrawing) return;\n    const pointer = canvas.getPointer(e.e);\n    points = [...points, pointer.x, pointer.y];\n    drawingTool.set({\n      points\n    });\n    canvas.renderAll();\n  });\n  canvas.on('mouse:up', () => {\n    isDrawing = false;\n    drawingTool.setCoords();\n    canvas.discardActiveObject();\n  });\n  useEffect(() => {\n    const canvas = new fabric.Canvas(canvasRef.current, {\n      width: 800,\n      // Set your canvas width\n      height: 400 // Set your canvas height\n    });\n\n    if (imageUrl) {\n      fabric.Image.fromURL(imageUrl, img => {\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n      });\n    }\n  }, [imageUrl]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Fabric, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Fabric;\nexport default Fabric;\nvar _c;\n$RefreshReg$(_c, \"Fabric\");","map":{"version":3,"names":["React","useRef","useEffect","fabric","jsxDEV","_jsxDEV","Fragment","_Fragment","Fabric","imageUrl","_s","canvasRef","drawingTool","Polygon","fill","stroke","strokeWidth","selectable","isDrawing","points","canvas","on","e","pointer","getPointer","x","y","set","add","renderAll","setCoords","discardActiveObject","Canvas","current","width","height","Image","fromURL","img","setBackgroundImage","bind","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Fabric.jsx"],"sourcesContent":["\nimport React, { useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\n\nconst Fabric = ({ imageUrl }) => {\n    const canvasRef = useRef(null);\n    // Inside your DrawingCanvas component\nconst drawingTool = new fabric.Polygon([], {\n    fill: 'transparent',\n    stroke: 'blue', // Set the polygon's outline color\n    strokeWidth: 2, // Set the outline width\n    selectable: false, // Prevent selection of polygons\n  });\n  \n  let isDrawing = false;\n  let points = [];\n  \n  canvas.on('mouse:down', (e) => {\n    isDrawing = true;\n    const pointer = canvas.getPointer(e.e);\n    points = [pointer.x, pointer.y];\n    drawingTool.set({ points });\n    canvas.add(drawingTool);\n  });\n  \n  canvas.on('mouse:move', (e) => {\n    if (!isDrawing) return;\n    const pointer = canvas.getPointer(e.e);\n    points = [...points, pointer.x, pointer.y];\n    drawingTool.set({ points });\n    canvas.renderAll();\n  });\n  \n  canvas.on('mouse:up', () => {\n    isDrawing = false;\n    drawingTool.setCoords();\n    canvas.discardActiveObject();\n  });\n\n    useEffect(() => {\n      const canvas = new fabric.Canvas(canvasRef.current, {\n        width: 800, // Set your canvas width\n        height: 400, // Set your canvas height\n      });\n  \n      if (imageUrl) {\n        fabric.Image.fromURL(imageUrl, (img) => {\n          canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n        });\n      }\n    }, [imageUrl]);\n  return (\n    <>\n    <canvas ref={canvasRef} />\n    </>\n  )\n}\n\nexport default Fabric\n\n\n\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B;EACJ,MAAMW,WAAW,GAAG,IAAIT,MAAM,CAACU,OAAO,CAAC,EAAE,EAAE;IACvCC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE,MAAM;IAAE;IAChBC,WAAW,EAAE,CAAC;IAAE;IAChBC,UAAU,EAAE,KAAK,CAAE;EACrB,CAAC,CAAC;;EAEF,IAAIC,SAAS,GAAG,KAAK;EACrB,IAAIC,MAAM,GAAG,EAAE;EAEfC,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,CAAC,IAAK;IAC7BJ,SAAS,GAAG,IAAI;IAChB,MAAMK,OAAO,GAAGH,MAAM,CAACI,UAAU,CAACF,CAAC,CAACA,CAAC,CAAC;IACtCH,MAAM,GAAG,CAACI,OAAO,CAACE,CAAC,EAAEF,OAAO,CAACG,CAAC,CAAC;IAC/Bd,WAAW,CAACe,GAAG,CAAC;MAAER;IAAO,CAAC,CAAC;IAC3BC,MAAM,CAACQ,GAAG,CAAChB,WAAW,CAAC;EACzB,CAAC,CAAC;EAEFQ,MAAM,CAACC,EAAE,CAAC,YAAY,EAAGC,CAAC,IAAK;IAC7B,IAAI,CAACJ,SAAS,EAAE;IAChB,MAAMK,OAAO,GAAGH,MAAM,CAACI,UAAU,CAACF,CAAC,CAACA,CAAC,CAAC;IACtCH,MAAM,GAAG,CAAC,GAAGA,MAAM,EAAEI,OAAO,CAACE,CAAC,EAAEF,OAAO,CAACG,CAAC,CAAC;IAC1Cd,WAAW,CAACe,GAAG,CAAC;MAAER;IAAO,CAAC,CAAC;IAC3BC,MAAM,CAACS,SAAS,CAAC,CAAC;EACpB,CAAC,CAAC;EAEFT,MAAM,CAACC,EAAE,CAAC,UAAU,EAAE,MAAM;IAC1BH,SAAS,GAAG,KAAK;IACjBN,WAAW,CAACkB,SAAS,CAAC,CAAC;IACvBV,MAAM,CAACW,mBAAmB,CAAC,CAAC;EAC9B,CAAC,CAAC;EAEA7B,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAG,IAAIjB,MAAM,CAAC6B,MAAM,CAACrB,SAAS,CAACsB,OAAO,EAAE;MAClDC,KAAK,EAAE,GAAG;MAAE;MACZC,MAAM,EAAE,GAAG,CAAE;IACf,CAAC,CAAC;;IAEF,IAAI1B,QAAQ,EAAE;MACZN,MAAM,CAACiC,KAAK,CAACC,OAAO,CAAC5B,QAAQ,EAAG6B,GAAG,IAAK;QACtClB,MAAM,CAACmB,kBAAkB,CAACD,GAAG,EAAElB,MAAM,CAACS,SAAS,CAACW,IAAI,CAACpB,MAAM,CAAC,CAAC;MAC/D,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAChB,oBACEJ,OAAA,CAAAE,SAAA;IAAAkC,QAAA,eACApC,OAAA;MAAQqC,GAAG,EAAE/B;IAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACxB,CAAC;AAEP,CAAC;AAAApC,EAAA,CApDKF,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAsDZ,eAAeA,MAAM;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}