{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Room.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const [images, setImages] = useState([]);\n\n  // Function to handle image upload\n  const handleImageUpload = event => {\n    const files = event.target.files;\n    if (files) {\n      const imageArray = Array.from(files).map(file => URL.createObjectURL(file));\n      setImages([...images, ...imageArray]);\n    }\n  };\n\n  // Function to remove an uploaded image\n  const handleRemoveImage = index => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Room\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Room","_s","images","setImages","useState","handleImageUpload","event","files","target","imageArray","Array","from","map","file","URL","createObjectURL","handleRemoveImage","index","newImages","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Room.jsx"],"sourcesContent":["import React from 'react'\n\nconst Room = () => {\n    const [images, setImages] = useState([]);\n\n  // Function to handle image upload\n  const handleImageUpload = (event) => {\n    const files = event.target.files;\n\n    if (files) {\n      const imageArray = Array.from(files).map((file) => URL.createObjectURL(file));\n      setImages([...images, ...imageArray]);\n    }\n  };\n\n  // Function to remove an uploaded image\n  const handleRemoveImage = (index) => {\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n  return (\n    <div>Room</div>\n  )\n}\n\nexport default Room"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAEhC,IAAIA,KAAK,EAAE;MACT,MAAME,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,CAAEC,IAAI,IAAKC,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;MAC7EV,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,GAAGO,UAAU,CAAC,CAAC;IACvC;EACF,CAAC;;EAED;EACA,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,SAAS,GAAG,CAAC,GAAGhB,MAAM,CAAC;IAC7BgB,SAAS,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC1Bd,SAAS,CAACe,SAAS,CAAC;EACtB,CAAC;EACD,oBACEnB,OAAA;IAAAqB,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEnB,CAAC;AAAAvB,EAAA,CAtBKD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAwBV,eAAeA,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}