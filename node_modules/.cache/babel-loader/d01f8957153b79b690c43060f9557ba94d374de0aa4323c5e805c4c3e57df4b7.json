{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Fabric.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ColorPicker from './ColorPicker';\nimport \"./Compo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Fabric() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const [colorpickershow, setcolorpickershow] = useState(false);\n  const canvasRef = useRef(null);\n  const [selectedColor, setSelectedColor] = useState('#FF0000'); // Initial selected color\n\n  const handleColorSelect = color => {\n    setSelectedColor(color);\n  };\n  // Function to handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n        setcolorpickershow(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to handle polygon drawing\n  const handlePolygonDrawing = e => {\n    if (!drawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setPolygonPoints([...polygonPoints, {\n      x,\n      y\n    }]);\n\n    // Draw the polygon on the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawImage(image);\n    drawPolygon(ctx, polygonPoints);\n  };\n\n  // Function to start drawing a polygon\n  const startDrawing = () => {\n    setDrawing(true);\n    setPolygonPoints([]);\n  };\n\n  // Function to stop drawing a polygon\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n\n  // Function to draw an image on the canvas\n  const drawImage = imageUrl => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = imageUrl;\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    setSelectedColor(\"red\");\n  };\n\n  // Function to draw a polygon on the canvas\n  const drawPolygon = (ctx, points) => {\n    if (points.length < 2) return;\n    ctx.strokeStyle = selectedColor;\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  // Clear canvas and reset drawing when the image changes\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      setDrawing(false);\n      setPolygonPoints([]);\n    }\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"sectionmain\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Image Upload and Polygon Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"file-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"file-input-label\",\n            children: \"Choose a File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"image-container\",\n        children: [image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Uploaded Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"Uploaded\",\n            width: 400,\n            height: 400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Draw a Polygon:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: 400,\n            height: 400,\n            onMouseDown: startDrawing,\n            onMouseMove: handlePolygonDrawing,\n            onMouseUp: stopDrawing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), colorpickershow ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div\",\n          children: [\"   \", /*#__PURE__*/_jsxDEV(ColorPicker, {\n            selectedColor: selectedColor,\n            onChangeColor: handleColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 24\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Fabric, \"LY9aww/Q601ka3SCkIeQ1qmdKfI=\");\n_c = Fabric;\nexport default Fabric;\nvar _c;\n$RefreshReg$(_c, \"Fabric\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ColorPicker","jsxDEV","_jsxDEV","Fabric","_s","image","setImage","drawing","setDrawing","polygonPoints","setPolygonPoints","colorpickershow","setcolorpickershow","canvasRef","selectedColor","setSelectedColor","handleColorSelect","color","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","handlePolygonDrawing","canvas","current","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","clearRect","width","height","drawImage","drawPolygon","startDrawing","stopDrawing","imageUrl","img","Image","src","points","length","strokeStyle","lineWidth","lineJoin","beginPath","moveTo","i","lineTo","closePath","stroke","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","type","accept","onChange","alt","ref","onMouseDown","onMouseMove","onMouseUp","onChangeColor","handleColorChange","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Fabric.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport ColorPicker from './ColorPicker';\nimport\"./Compo.css\";\nfunction Fabric() {\n  const [image, setImage] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [polygonPoints, setPolygonPoints] = useState([]);\nconst[colorpickershow,setcolorpickershow]=useState(false);\n  const canvasRef = useRef(null);\n\n  const [selectedColor, setSelectedColor] = useState('#FF0000');// Initial selected color\n\n  const handleColorSelect = (color) => {\n    setSelectedColor(color);\n    \n  };\n  // Function to handle image upload\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n        setcolorpickershow(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to handle polygon drawing\n  const handlePolygonDrawing = (e) => {\n    if (!drawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    setPolygonPoints([...polygonPoints, { x, y }]);\n\n    // Draw the polygon on the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawImage(image);\n    drawPolygon(ctx, polygonPoints);\n\n  };\n\n  // Function to start drawing a polygon\n  const startDrawing = () => {\n    setDrawing(true);\n    setPolygonPoints([]);\n  };\n\n  // Function to stop drawing a polygon\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n\n  // Function to draw an image on the canvas\n  const drawImage = (imageUrl) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = imageUrl;\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    setSelectedColor(\"red\")\n  };\n\n  // Function to draw a polygon on the canvas\n  const drawPolygon = (ctx, points) => {\n    if (points.length < 2) return;\n\n    ctx.strokeStyle = selectedColor;\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  // Clear canvas and reset drawing when the image changes\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      setDrawing(false);\n      setPolygonPoints([]);\n    }\n  }, [image]);\n\n  return (\n    <div>\n    <section className='sectionmain'>\n      <h1>Image Upload and Polygon Drawing</h1>\n\n      {/* Input field for image upload */}\n      <div>\n      <label class=\"file-input-container\">\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n      <span class=\"file-input-label\">Choose a File</span>\n      </label>\n      </div>\n      <div class=\"image-container\">\n      {/* Display the uploaded image */}\n      {image && (\n        <div>\n          <h2>Uploaded Image:</h2>\n          <img src={image} alt=\"Uploaded\"  width={400}\n          height={400} />\n        </div>\n      )}\n\n\n      {/* Canvas for drawing polygons */}\n     \n    \n      {image && (\n        <div>\n          <h2>Draw a Polygon:</h2>\n          <canvas\n          ref={canvasRef}\n            width={400}\n            height={400}\n            onMouseDown={startDrawing}\n            onMouseMove={handlePolygonDrawing}\n            onMouseUp={stopDrawing}\n           \n          />\n        </div>\n      )}\n     {colorpickershow ?<div className='div'>   <ColorPicker selectedColor={selectedColor} onChangeColor={handleColorChange} /></div>:null} \n    {/* ColorPicker component */}\n     \n      </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Fabric;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}