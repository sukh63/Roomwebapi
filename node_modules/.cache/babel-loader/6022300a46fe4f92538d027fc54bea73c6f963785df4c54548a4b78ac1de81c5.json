{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Room.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport ColorPicker from './ColorPicker';\nimport \"./Compo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const [canvas, setCanvas] = useState(null);\n  const [selectedColor, setSelectedColor] = useState('#FF0000'); // Initial selected color\n  const [drawingMode, setDrawingMode] = useState(false);\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const canvasRef = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    if (canvas) {\n      canvas.isDrawingMode = drawingMode;\n    }\n  }, [drawingMode, canvas]);\n  const handleCanvasInit = canvas => {\n    setCanvas(canvas);\n  };\n  const startDrawing = () => {\n    setDrawingMode(true);\n  };\n  const stopDrawing = () => {\n    setDrawingMode(false);\n  };\n  const handlePolygonDrawing = e => {\n    if (!drawingMode) return;\n    const canvas = canvasRef.current;\n    const pointer = canvas.getPointer(e.e);\n    setPolygonPoints([...polygonPoints, pointer]);\n  };\n  const drawPolygon = () => {\n    if (!canvas) return;\n    const polygon = new fabric.Polygon(polygonPoints, {\n      fill: selectedColor,\n      // Set the selected color as the fill\n      stroke: 'blue',\n      strokeWidth: 2,\n      selectable: true\n    });\n    canvas.add(polygon);\n    canvas.isDrawingMode = false;\n    setDrawingMode(false);\n    setPolygonPoints([]);\n  };\n  const handleColorChange = color => {\n    setSelectedColor(color);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"sectionmain\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Polygon Drawing with Color Picker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n          selectedColor: selectedColor,\n          onChangeColor: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startDrawing,\n          children: \"Start Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopDrawing,\n          children: \"Stop Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: drawPolygon,\n          children: \"Draw Polygon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 800,\n          height: 400,\n          onMouseMove: handlePolygonDrawing,\n          style: {\n            border: '1px solid black'\n          },\n          onMouseDown: e => e.preventDefault() // Prevent the default right-click context menu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"+pf8Lr+RTk/BDBuU/pLrj/QUIKg=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","fabric","ColorPicker","jsxDEV","_jsxDEV","Room","_s","canvas","setCanvas","selectedColor","setSelectedColor","drawingMode","setDrawingMode","polygonPoints","setPolygonPoints","canvasRef","createRef","isDrawingMode","handleCanvasInit","startDrawing","stopDrawing","handlePolygonDrawing","e","current","pointer","getPointer","drawPolygon","polygon","Polygon","fill","stroke","strokeWidth","selectable","add","handleColorChange","color","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChangeColor","onClick","ref","width","height","onMouseMove","style","border","onMouseDown","preventDefault","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Room.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport ColorPicker from './ColorPicker';\nimport\"./Compo.css\";\n\nconst Room = () => {\n    const [canvas, setCanvas] = useState(null);\n    const [selectedColor, setSelectedColor] = useState('#FF0000'); // Initial selected color\n    const [drawingMode, setDrawingMode] = useState(false);\n    const [polygonPoints, setPolygonPoints] = useState([]);\n    const canvasRef = React.createRef();\n  \n    useEffect(() => {\n      if (canvas) {\n        canvas.isDrawingMode = drawingMode;\n      }\n    }, [drawingMode, canvas]);\n  \n    const handleCanvasInit = (canvas) => {\n      setCanvas(canvas);\n    };\n  \n    const startDrawing = () => {\n      setDrawingMode(true);\n    };\n  \n    const stopDrawing = () => {\n      setDrawingMode(false);\n    };\n  \n    const handlePolygonDrawing = (e) => {\n      if (!drawingMode) return;\n  \n      const canvas = canvasRef.current;\n      const pointer = canvas.getPointer(e.e);\n      setPolygonPoints([...polygonPoints, pointer]);\n    };\n  \n    const drawPolygon = () => {\n      if (!canvas) return;\n  \n      const polygon = new fabric.Polygon(polygonPoints, {\n        fill: selectedColor, // Set the selected color as the fill\n        stroke: 'blue',\n        strokeWidth: 2,\n        selectable: true,\n      });\n  \n      canvas.add(polygon);\n      canvas.isDrawingMode = false;\n      setDrawingMode(false);\n      setPolygonPoints([]);\n    };\n  \n    const handleColorChange = (color) => {\n      setSelectedColor(color);\n    };\n  \n  return (\n    <div >\n    <section className='sectionmain'>\n    <div>\n    <h1>Polygon Drawing with Color Picker</h1>\n    <ColorPicker selectedColor={selectedColor} onChangeColor={handleColorChange} />\n    <button onClick={startDrawing}>Start Drawing</button>\n    <button onClick={stopDrawing}>Stop Drawing</button>\n    <button onClick={drawPolygon}>Draw Polygon</button>\n    <canvas\n      ref={canvasRef}\n      width={800}\n      height={400}\n      onMouseMove={handlePolygonDrawing}\n      style={{ border: '1px solid black' }}\n      onMouseDown={(e) => e.preventDefault()} // Prevent the default right-click context menu\n    />\n  </div>\n    \n    </section>\n  </div>\n  \n  )\n}\n\nexport default Room"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}