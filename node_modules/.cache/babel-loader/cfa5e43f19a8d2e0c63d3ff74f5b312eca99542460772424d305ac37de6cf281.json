{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Room.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport \"./Compo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [polygonPoints, setPolygonPoints] = useState([]);\n  const canvasRef = useRef(null);\n\n  // Function to handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to handle polygon drawing\n  const handlePolygonDrawing = e => {\n    if (!drawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    setPolygonPoints([...polygonPoints, {\n      x,\n      y\n    }]);\n\n    // Draw the polygon on the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawImage(image);\n    drawPolygon(ctx, polygonPoints);\n  };\n\n  // Function to start drawing a polygon\n  const startDrawing = () => {\n    setDrawing(true);\n    setPolygonPoints([]);\n  };\n\n  // Function to stop drawing a polygon\n  const stopDrawing = () => {\n    setDrawing(false);\n  };\n\n  // Function to draw an image on the canvas\n  const drawImage = imageUrl => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = imageUrl;\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  };\n\n  // Function to draw a polygon on the canvas\n  const drawPolygon = (ctx, points) => {\n    if (points.length < 2) return;\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctx.lineJoin = 'round';\n    ctx.beginPath();\n    ctx.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctx.lineTo(points[i].x, points[i].y);\n    }\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  // Clear canvas and reset drawing when the image changes\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setDrawing(false);\n    setPolygonPoints([]);\n  }, [image]);\n\n  // Function to handle image upload\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"sectionmain\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"head\",\n          children: \"Image Upload and Display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"file-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"file-input-label\",\n            children: \"Upload Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Uploaded Images:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-list\",\n            children: images.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl,\n                alt: `Uploaded ${index}`,\n                width: \"200\",\n                onClick: () => selectImage(imageUrl)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this), currentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Draw a Polygon:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              width: 800,\n              height: 400,\n              onMouseDown: startDrawing,\n              onMouseMove: handlePolygonDrawing,\n              onMouseUp: stopDrawing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Room, \"Ue5RLdyn7z/v/od7ZHw8W46YZZ4=\");\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Room","_s","image","setImage","drawing","setDrawing","polygonPoints","setPolygonPoints","canvasRef","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","handlePolygonDrawing","canvas","current","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","clearRect","width","height","drawImage","drawPolygon","startDrawing","stopDrawing","imageUrl","img","Image","src","points","length","strokeStyle","lineWidth","lineJoin","beginPath","moveTo","i","lineTo","closePath","stroke","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","type","accept","onChange","images","map","index","alt","onClick","selectImage","currentImage","ref","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Room.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport \"./Compo.css\";\n\nconst Room = () => {\n    const [image, setImage] = useState(null);\n    const [drawing, setDrawing] = useState(false);\n    const [polygonPoints, setPolygonPoints] = useState([]);\n    const canvasRef = useRef(null);\n  \n    // Function to handle image upload\n    const handleImageUpload = (event) => {\n      const file = event.target.files[0];\n  \n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setImage(e.target.result);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n  \n    // Function to handle polygon drawing\n    const handlePolygonDrawing = (e) => {\n      if (!drawing) return;\n  \n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n  \n      setPolygonPoints([...polygonPoints, { x, y }]);\n  \n      // Draw the polygon on the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawImage(image);\n      drawPolygon(ctx, polygonPoints);\n    };\n  \n    // Function to start drawing a polygon\n    const startDrawing = () => {\n      setDrawing(true);\n      setPolygonPoints([]);\n    };\n  \n    // Function to stop drawing a polygon\n    const stopDrawing = () => {\n      setDrawing(false);\n    };\n  \n    // Function to draw an image on the canvas\n    const drawImage = (imageUrl) => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.src = imageUrl;\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n  \n    // Function to draw a polygon on the canvas\n    const drawPolygon = (ctx, points) => {\n      if (points.length < 2) return;\n  \n      ctx.strokeStyle = 'blue';\n      ctx.lineWidth = 2;\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      ctx.moveTo(points[0].x, points[0].y);\n  \n      for (let i = 1; i < points.length; i++) {\n        ctx.lineTo(points[i].x, points[i].y);\n      }\n  \n      ctx.closePath();\n      ctx.stroke();\n    };\n  \n    // Clear canvas and reset drawing when the image changes\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      setDrawing(false);\n      setPolygonPoints([]);\n    }, [image]);\n  \n\n    // Function to handle image upload\n    \n  return (\n    <div >\n    <section className='sectionmain'>\n    <div>\n      <h1 className='head'>Image Upload and Display</h1>\n\n     \n     <label class=\"file-input-container\">\n     <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload}/>\n     <span class=\"file-input-label\">Upload Photo</span>\n </label>\n     \n {images.length > 0 && (\n    <div>\n      <h2>Uploaded Images:</h2>\n      <div className=\"image-list\">\n        {images.map((imageUrl, index) => (\n          <div key={index} className=\"image-container\">\n            <img\n              src={imageUrl}\n              alt={`Uploaded ${index}`}\n              width=\"200\"\n              onClick={() => selectImage(imageUrl)}\n            />\n          </div>\n        ))}\n      </div>\n       {/* Canvas for drawing polygons */}\n       {currentImage && (\n        <div>\n          <h2>Draw a Polygon:</h2>\n          <canvas\n            ref={canvasRef}\n            width={800}\n            height={400}\n            onMouseDown={startDrawing}\n            onMouseMove={handlePolygonDrawing}\n            onMouseUp={stopDrawing}\n          />\n        </div>\n      )}\n    </div>\n  )}\n    </div>\n    </section>\n  </div>\n  \n  )\n}\n\nexport default Room"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}