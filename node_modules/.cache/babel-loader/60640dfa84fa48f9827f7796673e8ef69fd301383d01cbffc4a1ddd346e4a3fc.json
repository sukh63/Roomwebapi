{"ast":null,"code":"var _jsxFileName = \"/Users/resecsystems/Documents/javasprogs/src/Components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  const [points, setPoints] = useState([]);\n  const [fillColor, setFillColor] = useState('red');\n  const handleMouseDown = e => {\n    setDrawing(true);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.strokeStyle = fillColor;\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.moveTo(offsetX, offsetY);\n    setPoints([...points, {\n      x: offsetX,\n      y: offsetY\n    }]);\n  };\n  const handleMouseMove = e => {\n    if (!drawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n    setPoints([...points, {\n      x: offsetX,\n      y: offsetY\n    }]);\n  };\n  const handleMouseUp = () => {\n    setDrawing(false);\n  };\n  const handleFillColorChange = e => {\n    setFillColor(e.target.value);\n  };\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setPoints([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Draw and Fill Polygons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: fillColor,\n        onChange: handleFillColorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCanvas,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"vwSJYXd9HB7NZt2qRluHHl7zvNw=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","drawing","setDrawing","points","setPoints","fillColor","setFillColor","handleMouseDown","e","canvas","current","ctx","getContext","strokeStyle","lineWidth","beginPath","offsetX","offsetY","nativeEvent","moveTo","x","y","handleMouseMove","lineTo","stroke","handleMouseUp","handleFillColorChange","target","value","clearCanvas","clearRect","width","height","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","ref","onMouseDown","onMouseMove","onMouseUp","_c","$RefreshReg$"],"sources":["/Users/resecsystems/Documents/javasprogs/src/Components/Canvas.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  const [points, setPoints] = useState([]);\n  const [fillColor, setFillColor] = useState('red');\n\n  const handleMouseDown = (e) => {\n    setDrawing(true);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.strokeStyle = fillColor;\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    const { offsetX, offsetY } = e.nativeEvent;\n    ctx.moveTo(offsetX, offsetY);\n    setPoints([...points, { x: offsetX, y: offsetY }]);\n  };\n\n  const handleMouseMove = (e) => {\n    if (!drawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n    setPoints([...points, { x: offsetX, y: offsetY }]);\n  };\n\n  const handleMouseUp = () => {\n    setDrawing(false);\n  };\n\n  const handleFillColorChange = (e) => {\n    setFillColor(e.target.value);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setPoints([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Draw and Fill Polygons</h1>\n      <div>\n        <input type=\"color\" value={fillColor} onChange={handleFillColorChange} />\n        <button onClick={clearCanvas}>Clear</button>\n      </div>\n      <canvas\n        ref={canvasRef}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      />\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}